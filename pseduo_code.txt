Greedy Algorithm (find_shortest_distance() method) Pseudo Code:

Prerequisites:
The packages are already manually loaded onto the trucks based on their individual requirements (manual_load() method).

Overview:
    1. Start with the first truck
    2. Iterate through all packages on the truck using a for loop and find the one that has the shortest distance to the
    hub and append the package_id to an empty list called “order_truck_list”, append the distance to an empty list
    called “total_truck_dist”, and calculate the travel time, based on the distance traveled, to an empty list called
    “delivery_times_list”.
    3. Iterate through the package list using a for loop and find the package that has the shortest distance from it to
    the previous package that was appended to the “ordered_truck_list” and append it to the “ordered_truck_list”, append
    the distance to the “total_truck_dist” list, and calculate the travel time, based on the distance traveled, and
    append it to the “delivery_times_list” list. Continue doing that, each time finding the shortest distance from the
    current package to the last package that was last loaded until the end of the package list is reached.
    4. Finally, get the distance from the last package to the hub and, append it to the “total_truck_dist” list, and
    calculate the travel time, based on the distance traveled, and append it to the “delivery_times_list” list.
    5. Repeat steps 1 through 4 for subsequent trucks.

Pseudo Code (Python):

ordered_truck_list = []
truck_distance_list = []
truck_travel_time_list = []
loaded_package_list = []

for package in manually_loaded_truck:

    if ordered_truck_list is empty:
        minimum_distance = infinity

    for package in manually_loaded_truck_packages:
        if distance_to_hub < minimum_distance and package not in loaded_package_list:
            minimum_distance = distance_to_hub
            package_id = package
    ordered_truck_list.append(package_id)
    truck_distance_list.append(minimum_distance)
    truck_travel_time_list.append(calculate_travel_time(minimum_distance))
    loaded_package_list.append(package_id)

    minimum_distance = infinity
    for package in manually_loaded_truck_packages:
        if distance_to_previous_package < minimum_distance and package not in loaded_package_list:
            minimum_distance = distance_to_hub
            package_id = package
    ordered_truck_list.append(package_id)
    truck_distance_list.append(minimum_distance)
    truck_travel_time_list.append(calculate_travel_time(minimum_distance))
    loaded_package_list.append(package_id)

truck_distance_list.append(distance_from_last_package_to_hub)
truck_travel_time_list.append(calculate_travel_time(distance_from_last_package_to_hub))

check_package_requirements(order_truck_list) is True (requirements met):
